name: "Check PR"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.repository }}-${{ github.ref }}-public
  cancel-in-progress: true

env:
  REPOSITORY_TYPE: public

jobs:
  install-dependencies:
    name: Installing dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.9
      - name: Confirming everything is OK
        run: |
          ls -la venv

  pr-name-check:
    name: PR name check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    timeout-minutes: 5
    needs: [ install-dependencies ]
    env:
      PR_NAME: ${{ github.event.pull_request.title }}
      PR_AUTHOR: ${{ github.actor }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.9
      - name: PR name check
        run: |
          bash config/stage_1_style_tests/_stage_pr_name_check.sh "$PR_NAME" "$PR_AUTHOR"

  code-style:
    name: Code Style
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [ install-dependencies ]
    env:
      PR_NAME: ${{ github.event.pull_request.title }}
      PR_AUTHOR: ${{ github.actor }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.9
      - name: Code Style
        run: |
          bash config/stage_1_style_tests/_stage_run_lint.sh "$PR_NAME" "$PR_AUTHOR"

  mypy-checks:
    name: Mypy checks
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [ install-dependencies ]

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.9
      - name: MyPy check
        run: |
          bash config/stage_1_style_tests/_stage_run_mypy.sh

  unittests:
    name: Unittests
    runs-on: ubuntu-latest
    timeout-minutes: 9
    needs: [ install-dependencies ]
    env:
      PR_NAME: ${{ github.event.pull_request.title }}
      PR_AUTHOR: ${{ github.actor }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.9
      - name: Run tests
        run: |
          bash config/run_tests.sh "$PR_NAME" "$PR_AUTHOR"

  start:
    name: Check start.py
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [ install-dependencies ]
    env:
      PR_NAME: ${{ github.event.pull_request.title }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.9
      - name: Run start
        run: |
          bash config/run_start.sh "$PR_NAME"

  flake8-checks:
    name: Import style checks
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [ install-dependencies ]

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.9
      - name: Flake8 check
        run: |
          bash config/stage_1_style_tests/_stage_run_flake8.sh

  requirements-check:
    name: Requirements check
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [ install-dependencies ]

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.9
      - name: Dependencies check
        run: |
          bash config/stage_1_style_tests/_stage_requirements_check.sh
